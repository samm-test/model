name: Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    name: Publish new release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true # only merged pull requests must trigger this job
    steps:
      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - run: tar -cvzf samm.tar.gz images model texts
      - run: echo $RELEASE_VERSION
      - uses: samm-test/toolbox-spreadsheet@main
      - run: ls -alh
      - run: pwd
      - run: ls / -alh
      - run: ls $GITHUB_WORKSPACE
      - uses: ncipollo/release-action@v1
        with:
          artifacts: samm.tar.gz, my_file.txt
          tag: ${{ env.RELEASE_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Merge main into develop branch
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: main
          base: develop
          title: Merge master into dev branch
          body: |
            This PR merges the master branch back into dev.
            This happens to ensure that the updates that happend on the release branch, i.e. CHANGELOG and manifest updates are also present on the dev branch.
